///////////////////////////////////////
// 要件レイヤ:プログラムの目的を記述する
///////////////////////////////////////
入力ファイルのマークアップをhtmlタグに置換する。



///////////////////////////////////////
// 基本レイヤ:大まかなアウトラインを手順として記述する
///////////////////////////////////////
入力ファイルのマークアップをhtmlタグに置換する手順

    【作業中文字列】という文字列は、「」。
    【入力ファイル名】は、プログラムの起動時設定(1)。
    【出力ファイル名】は、入力ファイル名から「」へ拡張子を置き換えたものの末尾から1文字消したもの&「_ltlbg.html」。
    【ファイル内容】は、入力ファイル名から読み込んだもの。

    //主処理作業手順群…後述に手順化されている。
    作業中文字列は、ファイル内容を前処理退避したもの。
    作業中文字列は、作業中文字列を前処理入替したもの。
    作業中文字列は、作業中文字列の原子を主処理したもの。
    作業中文字列は、作業中文字列の分子を主処理したもの。
    作業中文字列は、作業中文字列を後処理したもの。

    作業中文字列を、出力ファイル名へ「UTF-8」で保存する。
    「✨ 」＆出力ファイル名＆「を出力しました(HTML化)。[改行]」を出力する。

終わり。



//////////////////////////////////////////////////////////
// 詳細レイヤ:基本レイヤで呼び出される処理の詳細を記述する
//////////////////////////////////////////////////////////
[入力文字]を前処理退避する手順:文字列
    処理対象は、前処理退避対象。//前処理退避対象は後述で固定的に定義している

    加工中文字は、入力文字を処理対象で置換加工したもの。
    加工中文字を返す。
終わり。

[入力文字]を前処理入替する手順:文字列
    処理対象は、前処理入替対象。//前処理入替対象は後述で固定的に定義している

    加工中文字は、入力文字を処理対象で置換加工したもの。
    加工中文字を返す。
終わり。

[入力文字]の原子を主処理する手順:文字列
    処理対象は、原子。//原子は後述で固定的に定義している

    加工中文字は、入力文字を処理対象で置換加工したもの。
    加工中文字を返す。
終わり。

[入力文字]の分子を主処理する手順:文字列
    処理対象は、分子。//分子は後述で固定的に定義している

    加工中文字は、入力文字を処理対象で置換加工したもの。
    加工中文字を返す。
終わり。

[入力文字]を後処理する手順:文字列
    処理対象は、後処理対象。//後処理対象は後述で固定的に定義している

    加工中文字は、入力文字を処理対象で置換加工したもの。
    加工中文字を返す。
終わり。



//////////////////////////////////////////////////////////
// 共通部品レイヤ
//////////////////////////////////////////////////////////

// ■置換実施部品
// 「入力文字列」と「正規表現:置換先のタプル」を受け取って、入力文字列を正規表現置換する。
[入力文字]を[置換対象]で置換加工する手順:文字列
    加工中文字は、入力文字。
    置換アイテム番号を1から(置換対象の個数)まで増やしながら繰り返す
        正規表現で加工中文字を置換対象(置換アイテム番号)(1)から置換対象(置換アイテム番号)(2)へ置換して、加工中文字とする。
    繰り返し終わり。
    加工中文字を返す。
終わり。

// ■固定値定義
// 置換タイミング属性ごとに、置換対象と置換先のタプルを返却する
前処理退避対象を取得する手順:配列//置換対象と置換先のタプル
    対象は、{
        　{「「　」」、「〼」}//全角空白を一時的に別の文字へ
        、{「「 」」、「〿」}//半角空白を一時的に別の文字へ
        、{「「＆」」、「＆ａｍｐＷ」}//アンパサンド_全角をコード表記へ
        、{「「&」」、「＆ａｍｐＳ」}//アンパサンド_半角をコード表記へ
        、{「「＜」」、「＆ｌｔＷ」}//右大不等号_全角をコード表記へ
        、{「「<」」、「＆ｌｔＳ」}//右大不等号_半角をコード表記へ
        、{「「＞」」、「＆ｇｔＷ」}//左大符号等_全角をコード表記へ
        、{「「>」」、「＆ｇｔＳ」}//左大符号等_半角をコード表記へ
        、{「「”」」、「＆＃３９Ｗ」}//ダブルクォート_全角をコード表記へ
        、{「「"」」、「＆＃３９Ｓ」}//ダブルクォート_半角をコード表記へ
        、{「「’」」、「＆ｑｕｏｔＷ」}//シングルクォート_全角をコード表記へ
        、{「「'」」、「＆ｑｕｏｔＳ」}//シングルクォート_半角をコード表記へ
        、{「「/」」、「＆＃０４」}//半角スラッシュをコード表記へ
        、{「「[:：]」」、「<span class="ltlbg_colon">：</span>」}//コロンをコード表記へ
        、{「「[;；]」」、「<span class="ltlbg_semicolon">；</span>」}//セミコロンをコード表記へ
        、{「「^[〿〼]*\n/」」、「<br class="ltlbg_blankline">」}//空行(行頭改行(空白は含んでも良い))をタグへ
        、{「「\n」」、「<br class="ltlbg_br">」}//改行をタグへ
        、{「「([！？♥♪☆!?]〼*)(\w)」」、「「$1〼$2」」}  //特定の記号の後ろに空白(退避済空白文字)を挿入        
        }。
    対象を返す。
終わり。

前処理入替対象を取得する手順:配列//置換対象と置換先のタプル
    対象は、{
　{「「\[\^《《([^《》]+)》》\^\]」」、「「《《[^$1^]》》」」}

//        {「\[\^《《([^《》]+)》》\^\]」、「《《[^$1^]》》」}
//        \^\*\*\([^\*]\+\)\*\*\^/\*\*\^\1\^\*\*/g' \
//        \^《《\([^\*]\+\)》》\^/《《\^\1\^》》/g' \
//        \^{\([^｜]\+\)｜\([^}]\+\)}\^/{\^\1\^｜\2}/g' \
//        《《\*\*\([^\*]\+\)\*\*》》/\*\*《《\1》》\*\*/g' \
//        \[\^\*\*\([^\*]\+\)\*\*\^\]/\*\*\[\^\1\^\]\*\*/g' \
        }。
    対象を返す。
終わり。

原子を取得する手順:配列
    対象は、{
        　{「「([^a-zA-Z0-9_<>])([a-zA-Z0-9]{2})([^a-zA-Z0-9_<>])」」、「$1<span class="ltlbg_tcyA">$2</span>$3」}  //半角英数記号の2連続を縦中横へ
        、{「「([！!]{2})」」、「<span class="ltlbg_tcyA">!!</span>」}    //！!？?の2連続を縦中横へ
        、{「「([？?]{2})」」、「<span class="ltlbg_tcyA">??</span>」}    //同上
        、{「「([！!][？?])」」、「<span class="ltlbg_tcyA">!?</span>」}  //同上
        、{「「([？?][！!])」」、「<span class="ltlbg_tcyA">?!</span>」}  //同上
        、{「「(―{1,2})」」、「<span class="ltlbg_wSize">―</span>」}  //―か――を1文字倍サイズ化
        、{「「(／＼|〱)」」、「<span class="ltlbg_odori1"></span><span class="ltlbg_odori2"></span>」}//踊り字をタグに
        、{「「\^(.{2,3})\^」」、「<span class="ltlbg_tcyM">$1</span>」} //縦中横
        、{「「\[\^([^\^]+)\^\]」」、「<span class="ltlbg_rotate">$1</span>」} //回転
        、{「「\[-([^-])-\]」」、「<span class="ltlbg_wdfix">$1</span>」} //幅修正
        、{「「\[l\[(.)(.)\]r\]」」、「<span class="ltlbg_forceGouji1">$1</span><span class="ltlbg_forceGouji2">$2</span>」} //強制合字
        、{「「゛」」、「<span class="ltlbg_dakuten"></span>」} //エロ濁点をタグ化
        }。
    対象を返す。
終わり。

分子を取得する手順:配列
    対象は、{
        　{「「《《([^》]+)》》」」、「<span class="ltlbg_emphasis">$1</span>」}  //半角英数記号の2連続を縦中横へ
        、{「「\*\*([^\*]+)\*\*」」、「<span class="ltlbg_bold">$1</span>」}    //太字指定をタグへ
        、{「「{([^｜]+)｜([^}]+)}」」、「｜$1《$2》」}    //ルビ指定を一時タグへ※モノルビ化前
        、{「「｜([^《]+)《([^》]+)》」」、「<ruby>$1<rt>$2</rt></ruby>」}    //ルビ指定を一時タグへ※モノルビ化前
        }。
    対象を返す。
終わり。

後処理対象を取得する手順:配列
    対象は、{
        //事前退避置換したものの復旧
        　{「「〼」」、「&emsp;」}
        、{「「〿」」、「&nbsp;」}
        、{「「＆ａｍｐＷ」」, 「＆」}
        、{「「＆ａｍｐＳ」」, 「&amp;」}
        、{「「＆ｌｔＷ」」, 「＜」}
        、{「「＆ｌｔＳ」」, 「&lt;」}
        、{「「＆ｇｔＷ」」, 「＞」}
        、{「「＆ｇｔＳ」」, 「&gt;」}
        、{「「＆＃３９Ｗ」」, 「”」}
        、{「「＆＃３９Ｓ」」, 「&#39;」}
        、{「「＆ｑｕｏｔＷ」」, 「’」}
        、{「「＆ｑｕｏｔＳ」」, 「&quot;」}

        //改行を復旧
        、{「「<br class="ltlbg_br">」」、「<br class="ltlbg_br">[改行]」}

        //フォントやcssリンクなどのhtml表示用の追加
        、{「「^」」、「<!--<link rel="stylesheet" href="../littlebugRL.css">-->[改行]」}
        、{「「^」」、「<link rel="stylesheet" href="../littlebugTD.css">[改行]」}
        、{「「^」」、「<link rel="stylesheet" href="../littlebugU.css">[改行]」}
        、{「「^」」、「<link href="https://fonts.googleapis.com/css2?family=Noto+Serif+JP:wght@300&display=swap" rel="stylesheet">[改行]」}
        、{「「^」」、「<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>[改行]」}
        、{「「^」」、「<link rel="preconnect" href="https://fonts.googleapis.com">[改行]」}

    }。
    対象を返す。
終わり。